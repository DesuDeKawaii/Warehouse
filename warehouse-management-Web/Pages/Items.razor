@using warehouse_management_application.Items
@using warehouse_management_core
@using warehouse_management_core.DTO_s
@using warehouse_management_core.Entities
@using warehouse_management_application
@using warehouse_management_core.Exceptions
@page "/items"
@layout AppLayout
@inject NavigationManager NavigationManager
@inject ItemService ItemService

<PageTitle>Items</PageTitle>


<h3>Items List</h3>

@if (items == null)
{
    <p>Loading...</p>
}
else if (!items.Any())
{
    <p>No items found.</p>
}
else
{
    <ul>
        @foreach (var item in items)
        {
            <li>@item.Name - @item.Price</li>
        }
    </ul>
}

@code {
    private IEnumerable<ItemDTO> items;

    protected override async Task OnInitializedAsync()
    {
        items = await ItemService.GetItemsAsync();
    }
}